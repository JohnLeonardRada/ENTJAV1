/*
 * Copyright 2002-2006,2009 The Apache Software Foundation.
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *      http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package com.opensymphony.xwork2.config.providers;

import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.w3c.dom.Document;
import org.apache.commons.lang3.StringUtils;

import java.util.LinkedHashMap;
import java.util.Map;


/**
 * XML utilities.
 *
 * @author Mike
 */
public class XmlHelper {


    /**
     * This method will find all the parameters under this <code>paramsElement</code> and return them as
     * Map<String, String>. For example,
     * <pre>
     *   <result ... >
     *      <param name="param1">value1</param>
     *      <param name="param2">value2</param>
     *      <param name="param3">value3</param>
     *   </result>
     * </pre>
     * will returns a Map<String, String> with the following key, value pairs :-
     * <ul>
     * <li>param1 - value1</li>
     * <li>param2 - value2</li>
     * <li>param3 - value3</li>
     * </ul>
     *
     * @param paramsElement
     * @return
     */
    public static Map<String, String> getParams(Element paramsElement) {
        LinkedHashMap<String, String> params = new LinkedHashMap<String, String>();

        if (paramsElement == null) {
            return params;
        }

        NodeList childNodes = paramsElement.getChildNodes()